# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Push to branches

on:
  push:
    branches:
      - '**'
    tags:
      - '*'

jobs:

  build:
    name: Build and Analize
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO_NAME: cd-pipeline-app
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      PROD_DEPLOYMENT_REQUIRED: ${{ github.event_name == 'push' && contains(github.ref, '/tags/') }}
      DOCKER_TAG: 1.0.0
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        run: ./gradlew build jacocoTestReport sonarqube --info
        env:
          # Needed to get some information about the pull request, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Retrieve Docker image tag value
        run: echo "DOCKER_IMAGE_TAG=$(git describe --tag)" >> $GITHUB_ENV
        id: git_describe
      - name: Extract Branch Name
        run: echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        if: ${{ env.BRANCH == 'main' }} || (github.event_name == 'push' && contains(github.ref, '/tags/'))
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Configure GCloud Docker
        if: ${{ env.BRANCH == 'main' }} || (github.event_name == 'push' && contains(github.ref, '/tags/'))
        run: |-
          gcloud --quiet auth configure-docker

      - name: Build and tag Docker image
        run: |
          ./gradlew dockerBuildImage
          docker tag mila973/cd-pipeline-app:latest gcr.io/$PROJECT_ID/$DOCKER_REPO_NAME:$DOCKER_IMAGE_TAG
      - name: Execute Acceptance Testing
        run: |
          cd acceptance-tests/
          ./gradlew test
          cd ../
      - name: Publish
        if: ${{ env.BRANCH == 'main' }} || (github.event_name == 'push' && contains(github.ref, '/tags/'))
        run: |-
          docker push "gcr.io/$PROJECT_ID/$DOCKER_REPO_NAME:$DOCKER_IMAGE_TAG"
      - name: Trigger deploy workflow
        if: ${{ env.BRANCH == 'main' }} || (github.event_name == 'push' && contains(github.ref, '/tags/'))
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy to Test and Prod
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: "{ \"tag\": \"${{ env.DOCKER_TAG }}\", \"prod\": \"${{ env.PROD_DEPLOYMENT_REQUIRED }}\" }"