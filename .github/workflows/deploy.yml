name: Deploy to Test and Prod

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'Desired docker tag for deployment'
      prod:
        required: true
        description: 'Is deployment to production required?'

jobs:
  deploy-test:
    name: Deploy to Test Environment
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: cluster-1
      GKE_ZONE: europe-central2-a
      IMAGE_TAG: ${{ github.event.inputs.tag }}
      CONFIG_CAT_KEY: ${{ secrets.CONFIG_CAT_KEY_TEST }}
      OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}
      DOCKER_REPO_NAME: cd-pipeline-app
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      - name: Configure GCloud Docker
        run: |-
          gcloud --quiet auth configure-docker
      - run: |
          docker pull gcr.io/$PROJECT_ID/$DOCKER_REPO_NAME:$IMAGE_TAG
      - uses: azure/setup-helm@v1
        with:
          version: v3.0.1
        id: install
      - name: Deploy to Test environment
        run: |
          chmod +x "./k8s/deploy.sh"
          ./k8s/deploy.sh --set image.tag=$IMAGE_TAG --set env.OPEN_WEATHER_API_KEY.value=$OPEN_WEATHER_API_KEY --set env.CONFIG_CAT_KEY.value=$CONFIG_CAT_KEY --namespace="test" --wait --timeout 10m

  deploy-prod:
    name: Deploy to Production Environment
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.prod == 'true' }}
    needs: [ deploy-test ]
    env:
      GKE_CLUSTER: cluster-1
      GKE_ZONE: europe-central2-a
      CONFIG_CAT_KEY: ${{ secrets.CONFIG_CAT_KEY_PROD }}
      OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}
      IMAGE_TAG: ${{ github.event.inputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      - uses: azure/setup-helm@v1
        with:
          version: v3.0.1
        id: install
      - name: Deploy to Production environment
        run: |
          chmod +x "./k8s/deploy.sh"
          ./k8s/deploy.sh --set image.tag=$IMAGE_TAG --set env.OPEN_WEATHER_API_KEY.value=$OPEN_WEATHER_API_KEY --set env.CONFIG_CAT_KEY.value=$CONFIG_CAT_KEY --namespace="prod" --wait --timeout 10m


